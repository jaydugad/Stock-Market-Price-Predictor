import numpy as np
import pandas as pd
import yfinance as yf
from keras.models import load_model
import streamlit as st 
import matplotlib.pyplot as plt


model = load_model('/Users/jaydugad/Desktop/Stock Predictions Model.keras')

st.header('Stock Market Predictor ')


stock = st.text_input('Enter Stock Symbol', 'GOOG')
start = '2014-01-01'
end = '2024-06-30'


data = yf.download(stock, start, end)

data.reset_index(inplace=True)
st.subheader('Stock Data')
data

data_train = pd.DataFrame(data.Close[0: int(len(data)*0.80)])
data_test = pd.DataFrame(data.Close[int(len(data)*0.80): len(data)])


from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler(feature_range=(0,1))

pas_100_days = data_train.tail(100)
data_test = pd.concat( [pas_100_days, data_test], ignore_index=True)
data_test_scale = scaler. fit_transform (data_test)

st.subheader('Price vs Moving Avg. 50')
ma_50_days = data.Close.rolling(50).mean()
fig1 = plt.figure(figsize=(8, 6))
plt.plot(ma_50_days, 'r', label='50-Day MA')
plt.plot(data.Close, 'g', label='Close Price')
plt.legend(loc='upper left')
plt.show()
st.pyplot(fig1)

st.subheader('Price vs Moving Avg. 50 vs Moving Avg. 100 ')
ma_100_days = data.Close.rolling(100).mean()
fig2 = plt.figure(figsize=(8, 6))
plt.plot(ma_50_days, 'r', label='50-Day MA')
plt.plot(ma_100_days, 'b', label='100-Day MA')
plt.plot(data.Close, 'g', label='Close Price')
plt.legend(loc='upper left')
plt.show()
st.pyplot(fig2)

st.subheader('Price vs Moving Avg. 100 vs Moving Avg. 200 ')
ma_200_days = data.Close.rolling(200).mean()
fig3 = plt.figure(figsize=(8, 6))
plt.plot(ma_100_days, 'r', label='100-Day MA')
plt.plot(ma_200_days, 'b', label='200-Day MA')
plt.plot(data.Close, 'g', label='Close Price')
plt.legend(loc='upper left')
plt.show()
st.pyplot(fig3)

x=[]
y=[]

for i in range (100, data_test_scale. shape [0]):
    x. append(data_test_scale[i-100:i])
    y. append (data_test_scale[i,0])

x, y = np.array(x), np.array(y)

predict = model.predict(x)

scale = 1/scaler.scale_

predict = predict * scale
y = y * scale

st.subheader('Original Price vs Predicted Price')
fig4 = plt.figure(figsize=(8, 6))
plt.plot(predict, 'r', label='Original Prie')
plt.plot(y, 'b', label='Predicted Price')
plt.xlabel('Time')
plt.ylabel('Price')
plt.legend(loc='upper left')
plt.show()
st.pyplot(fig4)


st.caption('This stock price prediction model is developed as a part of an academic/research project and is intended for educational and informational purposes only. The predictions generated by this model are based on historical data and various machine learning algorithms. However, stock prices are influenced by a myriad of unpredictable factors including market conditions, economic events, and geopolitical developments.')
